= Library Instances

Given a basic set of projects as defined here[qed://../helpers/projects.rdoc].
We can use the the Library class to

  require 'roll/library'

A Library class can be initialized given the location of the project.

  tryme10 = Roll::Library.new('tmp/projects/tryme/1.0')
  tryme11 = Roll::Library.new('tmp/projects/tryme/1.1')

With a library instance in hand we can query it for information about itself.

  tryme10.name.assert == "tryme"
  tryme11.name.assert == "tryme"

  tryme10.version.to_s.assert == "1.0"
  tryme11.version.to_s.assert == "1.1"

Secondary information, taken from the PROFILE, can be queried via the #profile
method.

  tryme10.profile['homepage'].assert == "http://tryme.foo"
  tryme11.profile['homepage'].assert == "http://tryme.foo"

Of course, the most important function of a library is to load and require
a script. With an Library instance in hand this can be achieved directly.

  tryme10.load('tryme.rb')
  $tryme_message.assert == "Try Me v1.0"

  tryme11.load('tryme.rb')
  $tryme_message.assert == "Try Me v1.1"

When requiring files, if a file is required from two different versions of a 
library a VersionConflict error will be rasied.

  tryme11.require('tryme')

  expect Roll::VersionConflict do
    tryme10.require('tryme')
  end



