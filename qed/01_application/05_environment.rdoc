= Environment Class

The Environment class encapsulates the configuration data used to setup
the Ledger. It also provides methods for manipulating the configuration
files.

To demonstrate the Environment class we will need a set of conforming project
as define in support/projects.rdoc[qed://../support/projects.rdoc].

An Environment is instantiated with a single argument, the name of the
environment. If a name is not given the current environment will be used.
The current environment is determined by looking for a temporary PID-based
config file, failing that the RUBYENV environment variable, failing that
the `default` file in the users roll config directory, and lastly if all
else fails falling back to the static value "production".

  env = Roll::Environment.new
  env.name.assert == 'production'

An environment stores two essential tables for the functioning of Rolls.
The first if the lookup table. Which contains an associative array 
of [path, depth] pairs. We can add a entry to the lookup table via #append.

  env.append('tmp/projects', 2)

Looking at the lookup table we will see the entry is present.

  env.lookup.assert == [[File.expand_path('tmp/projects'), 2]]

The second important table is the index table. This table is generated
from the lookup table via the #sync method. Notice the index is presently
empty.

  env.index.assert == {}

But if we sync the environment,

  env.sync

then the index will contain entries for the library that exists in the
`tmp/projects` directory.

  env.index.keys.assert == ['tryme']

