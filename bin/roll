#! /usr/bin/ruby1.8

require 'tmpdir'
require 'fileutils'
require 'roll/library'

module Roll

  # This adds a location to the roll cache.
  def self.roll_update
    list = File.read(Library.user_ledger_file).split("\n")
    root = find_root
    if root
      puts "#{root}"
      list = list | [root]
      save_cache(list)
      puts "  '-> #{Library.user_ledger_file}"
    end
  end

  # This removes a location from the roll cache.
  def self.roll_remove
    list = File.read(Library.user_ledger_file).split("\n")
    root = find_root
    if root
      puts "#{root}"
      list.delete(root)
      save_cache(list)
      puts "  x <- #{Library.user_ledger_file}."
    end
  end

  def self.roll_list
    list = File.read(Library.user_ledger_file).split("\n")
    puts list.join("\n")
  end

  def self.save_cache(list)
    FileUtils.mkdir_p(File.dirname(Library.user_ledger_file))
    File.open(Library.user_ledger_file, 'w') do |f|
      f << list.join("\n")
    end
  end

  #
  def self.find_root
    dir = Dir.pwd
    until dir == '/'
      break File.exist?('.roll') # FIX
      dir = File.dirname(dir)
    end
    return nil if dir == '/'
    return dir
  end

  def self.windows?
    processor, platform, *rest = RUBY_PLATFORM.split("-")
    /ms/ =~ platform   # better?
  end

  # This script builds a list of all roll-ready bin locations
  # and writes that list as an environment setting shell script.
  # On Linux a call to this to you .bashrc file. Eg.
  #
  #   if [ -f ~/.rollrc ]; then
  #       . roll
  #   fi
  #
  # Currently this only supports bash.
  #
  # TODO Is this the best way to do it, or would it be better
  # to "install" executables to an appropriate bin dir,
  # suing links (soft if possible).

  def self.roll_path
    div = (windows? ? ';' : ':')

    env_path = ENV['PATH'].split(/[#{div}]/)

    # Go thru each roll lib and make sure bin
    # path in path.

    binpaths = []
    Library.list.each do |libname|
      path = Library[libname].bindir
      binpaths << path if path
    end

    #pathenv = (["$PATH"] + binpaths).join(div)

    pathenv = binpaths.join(div)

    #puts %{export PATH="#{pathenv}"}

    puts pathenv
  end
end

if $0 == __FILE__
  $VERBOSE = ARGV.delete('--verbose')
  case ARGV[0]
  when 'path', '--path', '-p'
    Roll.roll_path
  when 'in', 'up'
    Roll.roll_update
  when 'out', 'down'
    Roll.roll_remove
  when 'list'
    Roll.roll_list
  else
    puts "Ruby Roll"
    puts "Copyright (c) 2006 Tiger Ops"
  end
end

